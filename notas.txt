Login y sesión de usuarios para guardar favoritos

Boolean()
  -El metodo Boolean() retorna true o false dependiendo de lo que pasemos como parametro.
  -Es una forma sencilla de hacer un if(variable).

userContext:
  -Estamos pasandole a toda la aplicación el jwt y el setJWT con el contexto.
  -En un hook los traemos y lo usaremos para definir sí nos logeamos o deslogueamos.
  -Sí nos vamos a logear, damos un valor al token, sí nos vamos a desloguear, damos null como valor.
  -Exporta ambas funciones, junto con una variable que define sí está o no logeado dependiendo del valor
    del JWT.
  -Donde vayamos a usar el login y el logout vamos a usar ambas funciones, y en el header estaremos validando
    sí está logueado.

sessionStorage como estado inicial:
  -Como estado inicial de useState podemos colocar un una función.
  -Esto lo haremos en caso de querer pasar al estado inicial un calculo muy costoso, para que esa linea no se
    este ejecutando muchas veces siendo muy pesada.
  -En nuestro caso, en el contexto pasamos como estado inicial una función con el sessionStorage, esto para
    definir sí estamos logeados o no.

-Recordar que session y local storage son inseguros.

Favs:
  -Para los favs estamos haciendo lo mismo que con el user, y estamos manejandolo en el useUser.
  -El gif al que se le dió like, mediante la API, se guardará en un arrat que mantenga los likes a los que
    un usuario dió like.
  -Dentro del componente del favorite estamos validando sí a ese gif se le dio like, buscando en el array con
    los likes, y renderizando una cosa distinta dependiendo sí el gif esta likeado o no.
  -Para validar sí el gif esta dentro de ese array por medio del id del gif, usamos some en el array, que
    devuelve true o false sí el elemento está dentro del array.

Obtener favs por medio de un JWT:
  -El metodo GET como tal no se le pasa un body. Sí se puede, pero no es recomendable.
  -La mejor opción siempre es pasar el header 'Authorization', y como valor el JWT.
  -Esto hay que controlarlo desde la API.
  -Este lo estamos haciendo desde el context, para obtenerlos desde el inicio, incluso cuando recarguemos la
    página, ya que el jwt lo colocamos desde un inicio.

Recomendación: Cuando usamos un web token, lo correcto podría ser enviar un mensaje al servidor para que 
  invalide el jwt que usamos.